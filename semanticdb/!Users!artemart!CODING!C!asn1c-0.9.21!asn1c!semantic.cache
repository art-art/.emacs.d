;; Object asn1c/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "asn1c/"
  :tables (list 
   (semanticdb-table "asn1c.c"
    :major-mode 'c-mode
    :tags 
        '( ("sys-common.h" include nil nil [1604 1627])
            ("COPYRIGHT" variable (:constant-flag t) nil [1655 1664])
            ("asn1parser.h" include (:system-flag t) nil [1745 1768])
            ("asn1fix.h" include (:system-flag t) nil [1814 1834])
            ("asn1print.h" include (:system-flag t) nil [1861 1883])
            ("asn1compiler.h" include (:system-flag t) nil [1912 1937])
            ("asn1c_compat.h" include (:system-flag t) nil [1968 1993])
            ("dirent.h" include (:system-flag t) nil [2092 2111])
            ("usage" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("av0" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2138 2154]))                  
                :type "void")
                nil [2120 2155])
            ("importStandardModules" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("asn" variable
                       (:pointer 1
                        :type ("asn1p_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2227 2240])
                    ("skeletons_dir" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2241 2267]))                  
                :type "int")
                nil [2194 2268])
            ("main" function
               (:arguments 
                  ( ("ac" variable (:type "int") (reparse-symbol arg-sub-list) [2279 2286])
                    ("av" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [2287 2297]))                  
                :type "int")
                nil [2270 9483])
            ("importStandardModules" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("asn" variable
                       (:pointer 1
                        :type ("asn1p_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9584 9597])
                    ("skeletons_dir" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [9598 9624]))                  
                :type "int")
                nil [9551 13599]))          
    :file "asn1c.c"
    :pointmax 13599
    :fsize 13598
    :lastmodtime '(17670 17412)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("COPYRIGHT" . ((string "\"Copyright (c) 2003, 2004, 2005, 2006 Lev Walkin <vlm@lionet.info>\\n\"" 1674 . 1743)))
          )

    )
   (semanticdb-table "Makefile.am"
    :major-mode 'makefile-automake-mode
    :tags 
        '( ("SUBDIRS" variable (:default-value ("." "webcgi" "tests")) nil [2 27])
            ("AM_CFLAGS" variable (:default-value ("@ADD_CFLAGS@")) nil [28 53])
            ("AM_CPPFLAGS" variable (:default-value ("-I${top_srcdir}/libasn1compiler" "-I${top_srcdir}/libasn1parser" "-I${top_srcdir}/libasn1print" "-I${top_srcdir}/libasn1fix" "-I${top_srcdir}/skeletons" "-DDATADIR=\\\"$(pkgdatadir)\\\"")) nil [53 257])
            ("asn1c_LDADD" variable (:default-value ("$(top_builddir)/libasn1parser/libasn1parser.la" "$(top_builddir)/libasn1print/libasn1print.la" "$(top_builddir)/libasn1fix/libasn1fix.la" "$(top_builddir)/libasn1compiler/libasn1compiler.la")) nil [258 468])
            ("bin_PROGRAMS" variable (:default-value ("asn1c")) nil [469 502])
            ("noinst_HEADERS" variable (:default-value ("sys-common.h")) nil [503 533])
            ("dist_man1_MANS" variable (:default-value ("asn1c.1" "unber.1" "enber.1")) nil [534 575])
            ("check_SCRIPTS" variable (:default-value ("check-xxber.sh" "check-parsing.sh")) nil [576 624])
            ("TESTS" variable (:default-value ("$(check_SCRIPTS)")) nil [624 649])
            ("EXTRA_DIST" variable (:default-value ("$(check_SCRIPTS)")) nil [649 679])
            ("CLEANFILES" variable (:default-value (".check-xxber.*.tmp" ".check-parsing.*.tmp")) nil [679 732]))          
    :file "Makefile.am"
    :pointmax 732
    :fsize 731
    :lastmodtime '(17152 3014)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "sys-common.h"
    :major-mode 'c++-mode
    :tags 
        '( ("stdio.h" include (:system-flag t) nil [1478 1496])
            ("stdlib.h" include (:system-flag t) nil [1497 1516])
            ("string.h" include (:system-flag t) nil [1517 1536])
            ("assert.h" include (:system-flag t) nil [1537 1556])
            ("errno.h" include (:system-flag t) nil [1557 1575])
            ("sysexits.h" include (:system-flag t) nil [1767 1788]))          
    :file "sys-common.h"
    :pointmax 2138
    :fsize 2137
    :lastmodtime '(17420 13212)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "enber.c"
    :major-mode 'c-mode
    :tags 
        '( ("sys-common.h" include nil nil [1431 1454])
            ("asn1parser.h" include (:system-flag t) nil [1456 1479])
            ("asn_application.h" include (:system-flag t) nil [1513 1541])
            ("constraints.c" include (:system-flag t) nil [1542 1566])
            ("ber_tlv_tag.c" include (:system-flag t) nil [1567 1591])
            ("ber_tlv_length.c" include (:system-flag t) nil [1592 1619])
            ("COPYRIGHT" variable (:constant-flag t) nil [1647 1656])
            ("usage" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("av0" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1743 1759])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [1760 1764]))                  
                :type "void")
                nil [1725 1765])
            ("process" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("fname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1822 1840]))                  
                :type "int")
                nil [1803 1841])
            ("process_line" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("fname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1897 1915])
                    ("line" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1916 1927])
                    ("lineno" variable (:type "int") (reparse-symbol arg-sub-list) [1928 1939]))                  
                :type "int")
                nil [1873 1940])
            ("no_validation" variable
               (:typemodifiers ("static")
                :type "int")
                nil [1942 1967])
            ("main" function
               (:arguments 
                  ( ("ac" variable (:type "int") (reparse-symbol arg-sub-list) [1987 1994])
                    ("av" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [1995 2005]))                  
                :type "int")
                nil [1978 2740])
            ("usage" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("av0" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2813 2829])
                    ("copyright_only" variable (:type "int") (reparse-symbol arg-sub-list) [2830 2849]))                  
                :type "void")
                nil [2795 3115])
            ("process" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3195 3213]))                  
                :type "int")
                nil [3176 4225])
            ("process_line" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4251 4269])
                    ("line" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [4270 4281])
                    ("lineno" variable (:type "int") (reparse-symbol arg-sub-list) [4282 4293]))                  
                :type "int")
                nil [4227 9997]))          
    :file "enber.c"
    :pointmax 9999
    :fsize 9998
    :lastmodtime '(17671 29730)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("COPYRIGHT" . ((string "\"Copyright (c) 2004, 2005 Lev Walkin <vlm@lionet.info>\\n\"" 1666 . 1723)))
          )

    )
   (semanticdb-table "Makefile.in"
    :major-mode 'makefile-bsdmake-mode
    :tags nil
    :file "Makefile.in"
    :pointmax 23610
    :fsize 23609
    :lastmodtime '(17666 18418)
    :unmatched-syntax 'nil
    )
   )
  :file "!Users!artemart!CODING!C!asn1c-0.9.21!asn1c!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.1beta"
  )
